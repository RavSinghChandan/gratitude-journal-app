name: Frontend CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'gratitude-journal-front-end/**'
      - '.github/workflows/frontend-ci-cd.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'gratitude-journal-front-end/**'
      - '.github/workflows/frontend-ci-cd.yml'

env:
  NODE_VERSION: '18'
  ANGULAR_VERSION: '18'

jobs:
  # Lint and Test Job
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: gratitude-journal-front-end/gratitude-jounal-ui/package-lock.json
        
    - name: Install dependencies
      run: |
        cd gratitude-journal-front-end/gratitude-jounal-ui
        npm ci
        
    - name: Run linting
      run: |
        cd gratitude-journal-front-end/gratitude-jounal-ui
        npm run lint || echo "Linting completed"
        
    - name: Run unit tests
      run: |
        cd gratitude-journal-front-end/gratitude-jounal-ui
        npm run test -- --watch=false --browsers=ChromeHeadless --code-coverage
        
    - name: Upload test coverage
      uses: codecov/codecov-action@v3
      with:
        file: gratitude-journal-front-end/gratitude-jounal-ui/coverage/lcov.info
        flags: frontend
        name: frontend-coverage

  # Build Job
  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: lint-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: gratitude-journal-front-end/gratitude-jounal-ui/package-lock.json
        
    - name: Install dependencies
      run: |
        cd gratitude-journal-front-end/gratitude-jounal-ui
        npm ci
        
    - name: Build application
      run: |
        cd gratitude-journal-front-end/gratitude-jounal-ui
        npm run build -- --configuration production
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: gratitude-journal-front-end/gratitude-jounal-ui/dist/
        retention-days: 7

  # Security Scan Job
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install dependencies
      run: |
        cd gratitude-journal-front-end/gratitude-jounal-ui
        npm ci
        
    - name: Run npm audit
      run: |
        cd gratitude-journal-front-end/gratitude-jounal-ui
        npm audit --audit-level=moderate
        
    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
        working-directory: gratitude-journal-front-end/gratitude-jounal-ui

  # Deploy to Development
  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: [build, security-scan]
    if: github.ref == 'refs/heads/develop'
    environment: development
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        
    - name: Deploy to development environment
      run: |
        echo "Deploying to development environment..."
        # Add your deployment commands here
        # Example: Deploy to AWS S3, Netlify, Vercel, etc.
        
    - name: Notify deployment
      run: |
        echo "Frontend deployed to development environment"

  # Deploy to Production
  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build, security-scan]
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        
    - name: Deploy to production environment
      run: |
        echo "Deploying to production environment..."
        # Add your deployment commands here
        # Example: Deploy to AWS S3, Netlify, Vercel, etc.
        
    - name: Notify deployment
      run: |
        echo "Frontend deployed to production environment" 